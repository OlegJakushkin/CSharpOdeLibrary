/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_Core_WRAP_H_
#define SWIG_Core_WRAP_H_

class SwigDirector_Ode : public OdeProxy::OdeTemplate< double >, public Swig::Director {

public:
    SwigDirector_Ode();
    virtual ~SwigDirector_Ode();
    virtual void system(OdeProxy::OdeTemplate< double >::StateType const &x, OdeProxy::OdeTemplate< double >::StateType &dxdt, double t);
    virtual void observer(OdeProxy::OdeTemplate< double >::StateType const &x, double t);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *, void *, double);
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(void *, double);
    void swig_connect_director(SWIG_Callback0_t callbacksystem, SWIG_Callback1_t callbackobserver);

private:
    SWIG_Callback0_t swig_callbacksystem;
    SWIG_Callback1_t swig_callbackobserver;
    void swig_init_callbacks();
};

class SwigDirector_ComplexOde : public OdeProxy::OdeTemplate< Complex >, public Swig::Director {

public:
    SwigDirector_ComplexOde();
    virtual ~SwigDirector_ComplexOde();
    virtual void system(OdeProxy::OdeTemplate< Complex >::StateType const &x, OdeProxy::OdeTemplate< Complex >::StateType &dxdt, double t);
    virtual void observer(OdeProxy::OdeTemplate< Complex >::StateType const &x, double t);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *, void *, double);
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(void *, double);
    void swig_connect_director(SWIG_Callback0_t callbacksystem, SWIG_Callback1_t callbackobserver);

private:
    SWIG_Callback0_t swig_callbacksystem;
    SWIG_Callback1_t swig_callbackobserver;
    void swig_init_callbacks();
};


#endif
